{"version":3,"sources":["Carousel.js","Modal.js","Details.js"],"names":["Carousel","state","handleIndexClick","setState","event","target","dataset","index","React","Component","photos","active","value","map","photo","media","filter","Modal","props","el","document","createElement","modalRoot","getElementById","appendChild","removeChild","children","Details","petfinder","secret","toggleModal","showModal","pet","get","id","then","data","breed","Array","isArray","breeds","join","name","animal","contact","city","description","catch","loading","location"],"mappings":"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","file":"Details.389fc9cb.map","sourceRoot":"..\\src","sourcesContent":["import React from \"react\";\r\n\r\nclass Carousel extends React.Component {\r\n  state = {\r\n    photos: [],\r\n    active: 0\r\n  };\r\n\r\n  static getDerivedStateFromProps({ media }) {\r\n    let photos = [];\r\n    if (media && media.photos && media.photos.photo) {\r\n      photos = media.photos.photo.filter(photo => photo[\"@size\"] === \"pn\");\r\n    }\r\n    return { photos };\r\n  }\r\n  handleIndexClick = event => {\r\n    this.setState({\r\n      active: +event.target.dataset.index\r\n    });\r\n  };\r\n  render() {\r\n    const { photos, active } = this.state;\r\n    return (\r\n      <div className=\"carousel\">\r\n        <img src={photos[active].value} alt=\"primary animal\" />\r\n        <div className=\"carousel-smaller\">\r\n          {photos.map((photo, index) => (\r\n            /* eslint-disable-next-line */\r\n            <img\r\n              onClick={this.handleIndexClick}\r\n              key={photo.value}\r\n              alt=\"animal thumbnail\"\r\n              data-index={index}\r\n              src={photo.value}\r\n              className={index === active ? \"active\" : \"\"}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Carousel;\r\n","import React from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nclass Modal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.el = document.createElement(\"div\");\r\n    this.modalRoot = document.getElementById(\"modal\");\r\n    this.modalRoot.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.modalRoot.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    return createPortal(this.props.children, this.el);\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport pf from \"petfinder-client\";\r\nimport { navigate } from \"@reach/router\";\r\nimport Carousel from \"./Carousel\";\r\nimport Modal from \"./Modal\";\r\n\r\nconst petfinder = pf({\r\n  key: process.env.API_KEY,\r\n  secret: process.env.API_SECRET\r\n});\r\n\r\nclass Details extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    showModal: false\r\n  };\r\n  toggleModal = () => {\r\n    this.setState({\r\n      showModal: !this.state.showModal\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    petfinder.pet\r\n      .get({\r\n        output: \"full\",\r\n        id: this.props.id\r\n      })\r\n      .then(data => {\r\n        const pet = data.petfinder.pet;\r\n        let breed;\r\n        if (Array.isArray(pet.breeds.breed)) {\r\n          breed = pet.breeds.breed.join(\", \");\r\n        } else {\r\n          breed = pet.breeds.breed;\r\n        }\r\n\r\n        this.setState({\r\n          name: pet.name,\r\n          animal: pet.animal,\r\n          breed,\r\n          location: `${pet.contact.city}, ${pet.contact.state}`,\r\n          description: pet.description,\r\n          media: pet.media,\r\n          loading: false\r\n        });\r\n      })\r\n      .catch(() => navigate(\"/\"));\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <h1>Loading.....</h1>;\r\n    }\r\n\r\n    const {\r\n      name,\r\n      animal,\r\n      breed,\r\n      location,\r\n      description,\r\n      media,\r\n      showModal\r\n    } = this.state;\r\n    return (\r\n      <div className=\"details\">\r\n        <Carousel media={media} />\r\n        <div>\r\n          <h1>{name}</h1>\r\n          <h2>\r\n            {animal} -{breed} - {location}\r\n          </h2>\r\n          <button onClick={this.toggleModal}>Adopt {name}</button>\r\n          <p>{description}</p>\r\n          {showModal ? (\r\n            <Modal>\r\n              <h1>WOuld you like to adopt {name}</h1>\r\n              <div className=\"buttons\">\r\n                <button onClick={this.toggleModal}>Yes</button>\r\n                <button onClick={this.toggleModal}>Definitely Yes</button>\r\n              </div>\r\n            </Modal>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Details;\r\n"]}